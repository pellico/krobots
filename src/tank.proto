syntax = "proto3";

package protobuffer.tank;

message Vector {
    float x = 1;
    float y = 2;
}

message TankStatus {
    uint32 tick =1;
    Vector velocity =2; //Velocity in m/sec
    float angle = 3; // Angle in rad
    float cannon_angle = 4; // Angle in rad
    float damage = 5; 
    float energy = 6; //Energy when 0 movement no longer possible
    }

message TankRadar {
    float distance =1;
    float damage = 2;    
}

message RadarResult {
    uint32 tick = 1;
    float angle = 2; //radar angle rad
    repeated TankRadar tanks =4; //First 10 tanks
      }

message CommandResult {
    uint32 tick = 1;
    bool success = 2; 
}

message Command {
    fixed32 index =1;
    enum CommandId {
        GET_STATUS =0; //arguments ignored -->  TankStatus
        GET_RADAR_RESULT =1; //arguments how many -->  RadarResult, argument1 : radar increment +/- PI/5, argument 2,beam witdth [0,PI/5]
        SET_ENGINE_POWER =2; //Argument1: In fraction of max speed from -1.0 to +1.0. Values that exceed are wrapped
        FIRE_CANNON =3; //arguments are ignored -->  CommandResult (always successfully)
        SET_TURNING_IMPULSE =4; //argument1 turning speed from -1.0 (counter clockwise) to +1.0 clockwise Values outside this range are wrapped --> CommandResult
        SET_CANNON_TURNING_SPEED = 5; //argument1 turning speed from -1.0 (counter clockwise) to +1.0 clockwise Values outside this range are wrapped --> CommandResult
        
    }
    CommandId command =2;
    float argument1 =3; 
    float argument2 =4; 
  
    }
message RegisterTank {
    string name = 1;
}      
