/*
krobots
Copyright (C) 2021  Oreste Bernardi

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
syntax = "proto3";

package protobuffer.tank;

message PolarVector {
    float r = 1;
    float p = 2;
}

message TankStatus {
    uint32 tick =1; // Simualtion tick counter
    PolarVector velocity =2; //Velocity in (m/sec,rad) world reference
    float angle = 3; // The rotation angle in ]-pi; pi] .
    float cannon_angle = 4; // The rotation angle in ]-pi; pi] 
    float damage = 5; 
    float energy = 6; //Energy when 0 movement no longer possible
    bool success = 7; //Presently always true
    float angvel = 8; //Rotational speed rad/sec
    PolarVector power_source = 9; // Position of power source in tank relative coordinates
    }

message TankRadar {
    float distance =1;
    float damage = 2;  
}

message RadarResult {
    uint32 tick = 1; //Simulation tick counter
    float angle = 2; //radar angle rad
    repeated TankRadar tanks =4; //First 10 tanks
    }

message Command {
    fixed32 index =1;
    enum CommandId {
        /*arguments ignored
        return: TankStatus
        */
        GET_STATUS =0; 
        /*
        Move and get radar result
        argument1: radar increment [-PI/5,PI/5]
        argument2: beam witdth [0,PI/5]
        return: RadarResult
        */
        GET_RADAR_RESULT =1;
        /* Set forward power and rotation impulse
        argument1: In fraction of max speed from -1.0 to +1.0. Values that exceed are set to value MAX/MIN
        argument2 turning power from -1.0 (counter clockwise) to +1.0 clockwise Values outside this range are wrapped 
        return: TankStatus (always successfully)
        */
        SET_ENGINE_POWER =2; 
        /*
        Fire cannon
        return: TankStatus (always successfully)
        */
        FIRE_CANNON =3;
        /*
        Set cannon position
        argument1: Angle position in radians ]-PI,PI] relative to teh Tank angle.
        return: TankStatus (always successfully)
        */
        SET_CANNON_POSITION = 4;
        
    }
    CommandId command =2;
    float argument1 =3; 
    float argument2 =4; 
  
    }

/*
Used to register tank
Server answer with RegisterTankAnswer
*/
message RegisterTank {
    string name = 1;
}  


message SimulationConfig {
    float tank_energy_max = 1;
    float damage_max = 2;
    float bullet_max_range = 3;
    //Beyond this limit tank energy is decreased proportionaly with distance
    float zero_power_limit = 4;
    float radar_angle_increment_max = 5;
    float radar_width_max = 6;
    float radar_max_detection_range = 7;
    float bullet_speed = 8;
    float max_forward_power = 9;
    float max_turning_power = 10;
}
